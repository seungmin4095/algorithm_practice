# -*- coding: utf-8 -*-
"""aa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RQfzdUMS7sXtk5ykN4lW-taWPauIwAIJ

섹션3
"""

# n = int(input())
# pan = []
# sum = 0

# for i in range(n):
#     a = list(map(int,input().split()))
#     pan.append(a)

# for i in range(int(input())):
#     a, b, c = map(int,input().split())
#     for i in range(c):
#         if b == 0:
#             pan[a-1].append(pan[a-1].pop(0))
#         else:
#             pan[a-1].insert(0,pan[a-1].pop())

# s = 0
# e = n-1
# for i in range(n):
#     for j in range(s,e+1):
#         sum+=pan[i][j]
#     if i<n//2:
#         s+=1
#         e-=1
#     else:
#         s-=1
#         e+=1
# print(sum)

# n = int(input())
# tl = [[0*i for i in range(n+2)] for _ in range(n+2)]
# cnt = 0
# for i in range(1,n+1):
#     temp = list(map(int,input().split()))
#     for j in range(1,n+1):
#         tl[i][j] = temp[j-1]

# for i in range(1,n+1):
#     for j in range(1,n+1):
#         cur = tl[i][j]
#         if tl[i-1][j]>=cur or tl[i][j-1]>=cur or tl[i][j+1]>=cur or tl[i+1][j]>=cur:
#             continue
#         else:
#             cnt+=1

# print(cnt)

# tl = []

# for i in range(9):
#     a = list(map(int,input().split()))
#     tl.append(a)

# temp = [1,2,3,4,5,6,7,8,9]

# yn = True

# for i in range(9):
#     for j in range(9):
#         if yn == True:
#             a = tl[i][j]
#             for k in range(j+1,8):
#                 if a == tl[i][k]:
#                     yn == False
#                     break

#             for k in range(i+1,8):
#                 if a == tl[k][j]:
#                     yn == False
#                     break

# bb = []
# for i in range(0, 9, 3):
#     for j in range(0, 9, 3):
#         aa = []
#         aa.append(tl[i][j])
#         aa.append(tl[i+1][j])
#         aa.append(tl[i+2][j])
#         aa.append(tl[i][j+1])
#         aa.append(tl[i+1][j+1])
#         aa.append(tl[i+2][j+1])
#         aa.append(tl[i][j+2])
#         aa.append(tl[i+1][j+2])
#         aa.append(tl[i+2][j+2])
#         bb.append(list(set(aa)))

# for i in bb:
#     if i != temp:
#         yn = False
# if yn == True:
#     print("YES")
# else:
#     print("NO")

# a = [list(map(int,input().split())) for _ in range(7)]
# cnt = 0
# for i in range(7):
#     for j in range(3):
#         c = a[i][j:j+5]
#         b = list(reversed(c))
#         if c==b:
#             cnt+=1

# for i in range(7):
#     for j in range(3):
#         temp = []
#         for k in range(5):
#             temp.append(a[j+k][i])

#         c = temp
#         b = list(reversed(c))
#         if c==b:
#             cnt+=1

# print(cnt)

"""섹션4"""

# n, m = map(int,input().split())
# list1 = list(map(int,input().split()))

# list1.sort()

# row = 0
# high = n-1

# while row <= high:
#     mid = (row+high) // 2
#     if list1[mid] == m:
#         print(mid+1)
#         break
#     elif list1[mid] > m:
#         high = mid-1
#     else:
#         row = mid+1

# k, n = map(int,input().split())
# num = []

# for i in range(k):
#     num.append(int(input()))

# row = 1
# high = max(num)
# cnt = 0

# temp = []
# while row<=high:
#     mid = (row+high) // 2
#     for i in num:
#         a = i // mid
#         cnt += a

#     if cnt >= n:
#         temp.append(mid)
#         row = mid + 1
#     else:
#         high = mid -1
#     cnt = 0

# print(max(temp))

# n, m = map(int,input().split())
# num = list(map(int,input().split()))

# row = 1
# high = sum(num)

# temp = []
# while row<=high:
#     hap = 0
#     cur = 0
#     cnt = 0
#     mid = (row+high)//2
    
#     for i in range(len(num)):
#         hap += num[i]
#         if hap>mid:
#             hap-=num[i]
#             cnt +=1
#             hap = num[i]
#         if i == len(num):
#             cnt+=1

#     if cnt >= m:
#         temp.append(mid)
#         row = mid + 1
#     else:
#         high = mid - 1
# print(max(temp)+1)

# n, c = map(int,input().split())
# point = [int(input()) for _ in range(n)]

# point.sort()
# row = 1
# high = max(point)

# while row<=high:
#     mid = (row+high)//2
#     cnt = 1
#     ep = point[0]
#     for i in range(1,n):
#         if point[i]-ep>=mid:
#             cnt+=1
#             ep = point[i]
#     if cnt >= c:
#         res = mid
#         row = mid+1
#     else:
#         high = mid-1

# print(res)

# n = int(input())
# time = [list(map(int,input().split())) for _ in range(n)]

# time.sort(key = lambda x:x[1])
# cnt = 0
# cur = 0
# for i, j in time:
#     if i>=cur:
#         cur = j
#         cnt += 1

# print(cnt)

# n = int(input())
# profile = [list(map(int,input().split())) for _ in range(n)]

# cnt = 0
# profile.sort(reverse=True)

# kg = 0
# for i, j in profile:
#     if j>kg:
#         kg = j
#         cnt += 1

# print(cnt)

# n = int(input())
# length = list(map(int,input().split()))

# count = int(input())

# for i in range(count):
#     length[length.index(max(length))] = max(length) - 1
#     length[length.index(min(length))] = min(length) + 1

# print(max(length)-min(length))

# n, m = map(int,input().split())
# kg = list(map(int,input().split()))

# kg.sort()

# cnt = 0

# while len(kg)>=1:
#     if len(kg) == 1:
#         cnt += 1
#         break
#     if kg[0]+kg[-1] > m:
#         kg.pop()
#         cnt += 1
#     else:
#         kg.pop()
#         kg.pop(0)
#         cnt+=1

# print(cnt)

# n = int(input())
# num = list(map(int,input().split()))

# string = ''

# cnt = 0
# cur = 0

# while num:
#     if num[0] > cur and num[-1] > cur:
#             cur = min(num[0], num[-1])

#     elif num[0] > cur and num[-1] < cur:
#             cur = num[0]
        
#     elif num[0] < cur and num[-1] > cur:
#             cur = num[-1]

#     if len(num)>1 and cur == num[0]:
#         cnt += 1
#         num.pop(0)
#         string+='L'
#     elif len(num)>1 and cur == num[-1]:
#         cnt += 1
#         num.pop()
#         string+='R'
#     elif len(num) == 1 and num[0] >cur:
#         cnt += 1
#         num.pop()
#         string += 'L'
#         break

#     else:
#         break

# print(cnt, string,sep='\n')

# n = int(input())
# rev = list(map(int,input().split()))
# org = [0 for _ in range(n)]

# for i in range(n):
#     for j in range(n):
#         if(rev[i]==0 and org[j]==0):
#             org[j]=i+1
#             break
#         elif org[j]==0:
#             rev[i]-=1

# for x in org:
#     print(x, end=' ')

"""섹션5"""

# n, m = map(str,input().split())
# m = int(m)
# num = []
# for i in n:
#     num.append(int(i))

# stack = []

# for x in num:
#     while stack and m>0 and stack[-1]<x:
#         stack.pop()
#         m -= 1
#     stack.append(x)

# if m != 0:
#     stack = stack[:-m]

# for i in stack:
#     print(i,end='')

# r = input()
# rl = []
# for i in r:
#     rl.append(i)

# stack = []
# piece = 0
# for x in range(len(rl)):
#     if rl[x] == ')' and rl[x-1] == '(':
#         stack.pop()
#         piece += len(stack)
#         continue
#     elif rl[x] == ')' and rl[x-1] == ')':
#         stack.pop()
#         piece += 1
#         continue
#     stack.append(rl[x])

# print(piece)

# n = input()
# m = []
# for i in n:
#     m.append(i)

# stack = []
# for i in m:
#     if i == '(':
#         stack.append(i)
#     elif i == ')':
#         while True:
#             a = stack.pop()
#             if a == '(':
#                 break
#             print(a ,end='')
#     elif i == '*' or i == '/':
#         if stack:
#             if stack[-1] == '*' or stack[-1] == '/':
#                 a = stack.pop()
#                 print(a,end='')
#         stack.append(i)
#     elif i == '+' or i == '-':
#         while stack and stack[-1]!='(':
#             a = stack.pop()
#             print(a,end='')
#         stack.append(i)
#     elif i.isdigit():
#         print(i,end='')

# while stack:
#     a = stack.pop()
#     print(a,end='')

# n = input()
# m = []
# for i in n:
#     m.append(i)

# stack = []

# for i in m:
#     if i.isdigit():
#         stack.append(int(i))

#     else:
#         if i=='+':
#             n1=stack.pop()
#             n2=stack.pop()
#             stack.append(n2+n1)
#         elif i=='-':
#             n1=stack.pop()
#             n2=stack.pop()
#             stack.append(n2-n1)
#         elif i=='*':
#             n1=stack.pop()
#             n2=stack.pop()
#             stack.append(n2*n1)
#         elif i=='/':
#             n1=stack.pop()
#             n2=stack.pop()
#             stack.append(n2/n1)
# print(stack[0])

# n, m = map(int,input().split())

# stack = [i for i in range(1,n+1)]

# while len(stack) > 1:
#     for i in range(m-1):
#         a = stack.pop(0)
#         stack.append(a)
#     stack.pop(0)
# print(stack[0])

# n, m = map(int,input().split())
# danger = [(p, v) for p, v in enumerate(list(map(int,input().split())))]

# cnt = 0
# while True:
#     a = danger.pop(0)
#     if any(a[1]<x[1] for x in danger):
#         danger.append(a)
#     else:
#         cnt += 1
#         if a[0] == m:
#             break
    
# print(cnt)

# ess = input()
# ess = list(map(str,ess))
# savelen = len(ess)
# tc = int(input())

# queue = []
# for i in range(tc):
#     case = input()
#     case = list(map(str,case))
#     queue.append(case)

# cnt = 0
# num = 1
# temp = ess.copy()
# for i in queue:
#     for j in range(len(i)):
#         if i[j] in temp and i[j] == temp[0]:
#             cnt+=1
#             temp.pop(0)
#         elif i[j] in temp and i[j] != temp[0]:
#             break

#     if cnt == savelen:
#         print('#{} YES'.format(num))
#     else:
#         print('#{} NO'.format(num))
#     num += 1
#     cnt = 0
#     temp = ess.copy()

# num = int(input())
# f = []
# l = []
# for i in range(num):
#     a = input()
#     f.append(a)
# for i in range(num-1):
#     b = input()
#     l.append(b)

# for i in l:
#     if i in f:
#         f.pop(f.index(i))

# print(f[0])

# a = list(map(str,input()))
# b = list(map(str,input()))
# a.sort()
# b.sort()

# if a == b:
#     print('YES')
# else:
#     print('NO')

# heap = []
# import heapq as hq

# while True:
#     num = int(input())

#     if num == -1:
#         break
#     elif num == 0:
#         if len(heap) == 0:
#             print(-1)
#         else:
#             print(hq.heappop(heap))

#     else:
#         hq.heappush(heap, num)

heap = []
import heapq as hq

while True:
    num = int(input())

    if num == -1:
        break
    elif num == 0:
        if len(heap) == 0:
            print(-1)
        else:
            print(-hq.heappop(heap))

    else:
        hq.heappush(heap, -num)